[[rules]]
	description = "AWS Manager ID"
	regex = '''(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}'''
	tags = ["key", "AWS"]
	[rules.allowlist]
		regexes = [
			'''\"image/png\": \"[0-9a-zA-Z\/+]{1,}(=){0,2}\\n\"'''
		]

[[rules]]
	description = "AWS Secret Key"
	regex = '''(?i)aws(.{0,20})?(?-i)['\"][0-9a-zA-Z\/+]{40}['\"]'''
	tags = ["key", "AWS"]

[[rules]]
	description = "AWS MWS key"
	regex = '''amzn\.mws\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'''
	tags = ["key", "AWS", "MWS"]

[[rules]]
	description = "AWS cred file info"
	regex = '''(?i)(aws_access_key_id|aws_secret_access_key)(.{0,20})?=.[0-9a-zA-Z\/+]{20,40}'''
	tags = ["AWS"]

[[rules]]
	description = "Facebook Secret Key"
	regex = '''(?i)(facebook|fb)(.{0,20})?(?-i)['\"][0-9a-f]{32}['\"]'''
	tags = ["key", "Facebook"]

[[rules]]
	description = "Facebook Client ID"
	regex = '''(?i)(facebook|fb)(.{0,20})?['\"][0-9]{13,17}['\"]'''
	tags = ["key", "Facebook"]

[[rules]]
	description = "Twitter Secret Key"
	regex = '''(?i)twitter(.{0,20})?[0-9a-z]{35,44}'''
	tags = ["key", "Twitter"]

[[rules]]
	description = "Twitter Client ID"
	regex = '''(?i)twitter(.{0,20})?[0-9a-z]{18,25}'''
	tags = ["client", "Twitter"]

[[rules]]
	description = "Github"
	regex = '''(?i)github(.{0,20})?(?-i)[0-9a-zA-Z]{35,40}'''
	tags = ["key", "Github"]
	[rules.allowlist]
		regexes = [
			'''\"image/png\": \"[0-9a-zA-Z\/+]{1,}(=){0,2}\\n\"'''
		]

[[rules]]
	description = "LinkedIn Client ID"
	regex = '''(?i)linkedin(.{0,20})?(?-i)[0-9a-z]{12}'''
	tags = ["client", "LinkedIn"]

[[rules]]
	description = "LinkedIn Secret Key"
	regex = '''(?i)linkedin(.{0,20})?[0-9a-z]{16}'''
	tags = ["secret", "LinkedIn"]

[[rules]]
	description = "Slack"
	regex = '''xox[baprs]-([0-9a-zA-Z]{10,48})?'''
	tags = ["key", "Slack"]

[[rules]]
	description = "Asymmetric Private Key"
	regex = '''-----BEGIN ((EC|PGP|DSA|RSA|OPENSSH) )?PRIVATE KEY( BLOCK)?-----'''
	tags = ["key", "AsymmetricPrivateKey"]


[[rules]]
	description = "Google API key"
	regex = '''AIza[0-9A-Za-z\\-_]{35}'''
	tags = ["key", "Google"]
	[rules.allowlist]
		regexes = [
			'''\"image/png\": \"[0-9a-zA-Z\/+]{1,}(=){0,2}\\n\"'''
		]

[[rules]]
	description = "Google (GCP) Service Account"
	regex = '''"type": "service_account"'''
	tags = ["key", "Google"]

[[rules]]
	description = "Heroku API key"
	regex = '''(?i)heroku(.{0,20})?[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'''
	tags = ["key", "Heroku"]

[[rules]]
	description = "MailChimp API key"
	regex = '''(?i)(mailchimp|mc)(.{0,20})?[0-9a-f]{32}-us[0-9]{1,2}'''
	tags = ["key", "Mailchimp"]

[[rules]]
	description = "Mailgun API key"
	regex = '''((?i)(mailgun|mg)(.{0,20})?)?key-[0-9a-z]{32}'''
	tags = ["key", "Mailgun"]

[[rules]]
	description = "PayPal Braintree access token"
	regex = '''access_token\$production\$[0-9a-z]{16}\$[0-9a-f]{32}'''
	tags = ["key", "Paypal"]

[[rules]]
	description = "Picatic API key"
	regex = '''sk_live_[0-9a-z]{32}'''
	tags = ["key", "Picatic"]

[[rules]]
	description = "SendGrid API Key"
	regex = '''SG\.[\w_]{16,32}\.[\w_]{16,64}'''
	tags = ["key", "SendGrid"]

[[rules]]
	description = "Slack Webhook"
	regex = '''https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}'''
	tags = ["key", "slack"]

[[rules]]
	description = "Stripe API key"
	regex = '''(?i)stripe(.{0,20})?[sr]k_live_[0-9a-zA-Z]{24}'''
	tags = ["key", "Stripe"]

[[rules]]
	description = "Square access token"
	regex = '''sq0atp-[0-9A-Za-z\-_]{22}'''
	tags = ["key", "square"]

[[rules]]
	description = "Square OAuth secret"
	regex = '''sq0csp-[0-9A-Za-z\\-_]{43}'''
	tags = ["key", "square"]

[[rules]]
	description = "Twilio API key"
	regex = '''(?i)twilio(.{0,20})?SK[0-9a-f]{32}'''
	tags = ["key", "twilio"]

[[rules]]
	description = "Quay Token"
	regex = '''(?i)quay.*[ |\"|=|:][0-9a-zA-Z\+]{107}='''
	tags = ["Quay"]

[[rules]]
	description = "Quay token"
	regex = '''(?i)quay.*[ |\"|=|:][0-9a-zA-Z]{40}'''
	tags = ["Quay"]
	[rules.allowlist]
		regexes = [
			'''quay.io/.*?@sha256'''
		]

[[rules]]
	description = "Certificate"
	regex = '''-----BEGIN CERTIFICATE-----'''
	tags = ["key", "cert"]
	[rules.allowlist]
		files = [
			'''.*test.go'''
		]
		paths = [
			'''test'''
		]

[[rules]]
	description = "Email"
	regex = '''[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}'''
	tags = ["email"]
	[rules.allowlist]
		regexes = [
			'''(hello|acm-contact|quay-devel)@redhat\.com''',
			'''(?i)(git(hub-actions)?|x-oauth-basic|GITHUB_TOKEN|GIT_AUTH_TOKEN)@github(\.ibm)?\.com''',
			'''[a-zA-Z0-9._%+-]+@users\.noreply\.github\.com''',
			'''signer(2)?@enterprise\.com''',
			'''sample_signer@signer.com''',
			'''apiteam@swagger.io''',
			'''hello@cloudposse.com''',
			'''kubernetes@nginx.com''',
			'''open-cluster-management@googlegroups.com''',
			'''xxxx@xxxx.com''',
			'''[a-zA-Z0-9._%+-]+@example.com''',
			'''(user|acm-cicd|xx)@redhat.com''',
			'''(token|noreply)@github.com''',
			'''feross@feross.org''',
			'''awx@acm-install-001.hosts.qa.psi.rdu2.redhat.com'''
		]
		files = [
			'''snapshot_diff.md'''
		]

[[rules]]
	description = "Env Var"
	regex = '''(?i)(secret|password|pass|pw|host)=[0-9a-zA-Z-_.{}]{4,120}'''
	[rules.allowlist]
		regexes = [
			'''TEST_SECRET=keyring(-|_)secret''',
			'''(?i)host=(http|127\.0\.0\.1)''',
			'''api=\{api\}''',
			'''(?i)Secret=my-pull-secret''',
			'''Secret=\{(defaultPullSecret|controlProps)\}?'''
		]

[[rules]]
	description = "API Key in Env Var"
	regex = '''(?i)(apikey|key|api)=([0-9a-zA-Z-_.{}]{4,120})'''
	[rules.allowlist]
		regexes = [
			'''sonar\.projectKey'''
		]
	[[rules.Entropies]]
		Min = "4.5"
        Max = "4.7"
        Group = "2"

[[rules]]
	description = "Generic Credential"
	regex = '''(?i)(dbpasswd|dbuser|dbname|dbhost|password|guid|hostname|pw|auth)(.{0,20})?['|"]([0-9a-zA-Z-_\/+!{}/=]{4,120})['|"]'''
	tags = ["generic", "credential"]
	# ignore leaks with specific identifiers like slack and aws
	[rules.allowlist]
		description = "ignore slack, mailchimp, aws, common kubeapi versions, sonarcloud"
		regexes = [
			'''xox[baprs]-([0-9a-zA-Z]{10,48})''',
			'''(?i)(.{0,20})?['"][0-9a-f]{32}-us[0-9]{1,2}['"]''',
			'''(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}''',
			'''(?i)(resource|selector|ownerLabel|clusterIDLabel|namereq\.|label|event\.)Key''',
			'''BOOTSTRAP_KS_HOST_API''',
			'''PIPELINE_MANIFEST_COMPONENT_KEY''',
			'''NewUnauthorized''',
			'''auth(z)?-type: \"(id-token|access-token|rbac)\"''',
			'''pkg/api(s)?/''',
			'''test-auth''',
			'''clusterrolebindings.rbac.authorization.k8s.io''',
			'''useRecoilState''',
			'''authentication\", \"state\"''',
			'''auth(-idp)?(\"|\'): (\"xxxxxxx\"|(\"|\')ignore(\"|\'))''',
			'''AuthInfos\[\"default(-auth)?\"\]''',
			'''AuthInfo(: +\"default(-auth)?\"|{\"default-auth\")''',
			'''Password   string `json:\"pas(s?)word\"''',
			'''Password(:| =)?( *)string\(s.Data\[\"password\"''',
			'''password\"] = \"your_password\"''',
			'''Password\",type=\"string\"''',
			'''PWD: \'pass-viewer''',
			'''PASSWORD \|\| Cypress.env\(\'OPTIONS_HUB_PASSWORD''',
			'''Password:( *)\"REDACTED\"''',
			'''['|"](my-host|other-host)[0-9]*['|"]'''
		]

[[rules]]
	description = "Generic API Key"
	regex = '''(?i)(api_key|apikey|key)(.{0,20})?['|"]([0-9a-zA-Z-_\/+!{}/=]{4,120})['|"]'''
	tags = ["key", "API", "generic"]
	[[rules.Entropies]]
		Min = "4.5"
        Max = "4.7"
        Group = "2"

[[rules]]
	description = "Generic Secret"
	regex = '''(?i)(secret)(.{0,20})?['|"]([0-9a-zA-Z-_\/+!{}/=]{4,120})['|"]'''
	tags = ["generic", "secret"]
	[rules.allowlist]
		regexes = [
			'''(?i)secret.Data\[\"''',
			'''(?i)(secret)?(key)?ref''',
			'''(?i)Secret(Name)?:( *)\"(test|secretName|secret|testns|mySecret)\"''',
			'''secret:( *)newKubeConfigSecret\(\"ns1\", \"secret1\"''',
			'''(new)?Secret\(\"(test_cluster|secret-name\", \"secret-namespace|local-cluster)\"''',
			'''SecretResourceAttributes''',
			'''(?i)(pull(_|-)?|CoreV1\(\).|check)Secret(s)?''',
			'''(?i)Hub(-)?Config(-)?Secret(-)?Name''',
			'''(?i)secret((\'|\"):)? ((\'|\")grc-test-1(\'|\")|is deleted|\(alert/g0\)|data under the \"ssh-privatekey\")''',
			'''(?i)secret(\', kind|\"|-type\"):( )*(\'value|\"your_clientSecret\"|\"(non-)?acm-cluster\")''',
			'''SecretType (=|!)= (\"acm-cluster\"|\"true\")''',
			'''(?i)secretName( := \"fake-server-secret\"|( *)= \"bootstrap-hub-kubeconfig\")''',
			'''(?i)secret(\.)?Name, (\"-cluster-secret\"|Namespace: \"openshift-config\"|\"namespace\")''',
			'''(?i)secret(Name.type|AccessKey\"]|Name string) = (\'text\'|\'hidden\'|\"your_aws_secret_access_key\"|\"auto-import-secret\")''',
			'''Secret\' \|\| id === \'helmSecret''',
			'''secrets\", \"configmaps\", \"serviceaccounts\"''',
			'''Secret containing a \'kubeconfig''',
			'''secrets.Items, initSecret\(\"(a-base64-encoded-secret|remote-managed-one-(0-td8kk-admin-kubeconfig|bootstrap-sa-token-xkxdv)|the-secret-thing)\"''',
			'''secret\", \"name\"'''
		]

[[rules]]
	description = "Generic User"
	regex = '''(?i)(user)(.{0,20})?['|"]([0-9a-zA-Z-_\/+!{}/=]{4,120})['|"]'''
	tags = ["generic", "user"]
	[rules.allowlist]
		regexes = [
			'''(?i)user(_inputs|Namespace|menu| page\"|(\\\")?\", \"state\": |( *)string `json:\"user\"|Info)''',
			'''(?i)user( = string\(s.Data\[\"username\"|=\$\{ADMIN_USER:-| \|\| Cypress.env\(\'OPTIONS_HUB_USER)| === \'kubeadmin''',
			'''(?i)user(NAME|Dir|name(\"?)]|1)( *)(, |=| = )(\"multicloudlab\"|\"/root\"|\"your_username\"|\"admin1\"|\"view1\"|Cypress.env\(\"RBAC_PASS\"|RBACpass|\"e2e-cluster-admin-cluster\")''',
			'''(?i)user\"(,| or)( \"Group\"|type=\"string\")''',
			'''User:( *)\"REDACTED\"''',
			'''users Defaults to \"claim\"''',
			'''user.name (\'|\")[0-9a-zA-Z-]+(\'|\")''',
			'''user(\.HomeDir|ServerHost), (\"wrongcluster\"|\".kube\", \"config\")''',
			'''useRecoilState'''
		]

[allowlist]
	description = "Allowlisted files"
	files = ['''^\.?gitleaks.toml$''',
	'''(.*?)(jpg|gif|doc|pdf|bin)$''',
	'''(go.mod|go.sum)$''',
	'''reposcan.md'''
	]
	paths = ['''node(-|_)modules''', '''vendor''', '''vbh''']
